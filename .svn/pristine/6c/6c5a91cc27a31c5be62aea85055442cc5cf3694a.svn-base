// Generated by data binding compiler. Do not edit!
package com.cbs.snb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.cbs.snb.R;
import com.cbs.snb.data.network.models.get.SalesAnalysisReportModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class SalesAnalysisReportAdapterLayoutBinding extends ViewDataBinding {
  @NonNull
  public final TextView amount;

  @NonNull
  public final TextView amountTxt;

  @NonNull
  public final TextView cardName;

  @NonNull
  public final TextView qty;

  @NonNull
  public final TextView qtyTxt;

  @NonNull
  public final CardView salesAnalysisCard;

  @NonNull
  public final TextView slpName;

  @NonNull
  public final TextView slpNameTxt;

  @NonNull
  public final TextView space3;

  @NonNull
  public final TextView space4;

  @NonNull
  public final TextView space5;

  @Bindable
  protected SalesAnalysisReportModel mSalesAnalysisReports;

  protected SalesAnalysisReportAdapterLayoutBinding(Object _bindingComponent, View _root,
      int _localFieldCount, TextView amount, TextView amountTxt, TextView cardName, TextView qty,
      TextView qtyTxt, CardView salesAnalysisCard, TextView slpName, TextView slpNameTxt,
      TextView space3, TextView space4, TextView space5) {
    super(_bindingComponent, _root, _localFieldCount);
    this.amount = amount;
    this.amountTxt = amountTxt;
    this.cardName = cardName;
    this.qty = qty;
    this.qtyTxt = qtyTxt;
    this.salesAnalysisCard = salesAnalysisCard;
    this.slpName = slpName;
    this.slpNameTxt = slpNameTxt;
    this.space3 = space3;
    this.space4 = space4;
    this.space5 = space5;
  }

  public abstract void setSalesAnalysisReports(
      @Nullable SalesAnalysisReportModel salesAnalysisReports);

  @Nullable
  public SalesAnalysisReportModel getSalesAnalysisReports() {
    return mSalesAnalysisReports;
  }

  @NonNull
  public static SalesAnalysisReportAdapterLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.sales_analysis_report_adapter_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SalesAnalysisReportAdapterLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SalesAnalysisReportAdapterLayoutBinding>inflateInternal(inflater, R.layout.sales_analysis_report_adapter_layout, root, attachToRoot, component);
  }

  @NonNull
  public static SalesAnalysisReportAdapterLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.sales_analysis_report_adapter_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SalesAnalysisReportAdapterLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SalesAnalysisReportAdapterLayoutBinding>inflateInternal(inflater, R.layout.sales_analysis_report_adapter_layout, null, false, component);
  }

  public static SalesAnalysisReportAdapterLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SalesAnalysisReportAdapterLayoutBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (SalesAnalysisReportAdapterLayoutBinding)bind(component, view, R.layout.sales_analysis_report_adapter_layout);
  }
}
