// Generated by Dagger (https://google.github.io/dagger).
package com.cbs.snb.ui.activity;

import com.cbs.snb.data.database.AppDatabase;
import com.cbs.snb.data.network.repository.Repository;
import com.cbs.snb.data.preferences.PreferenceHelper;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class CreateActivityViewModel_Factory implements Factory<CreateActivityViewModel> {
  private final Provider<Repository> repositoryProvider;

  private final Provider<PreferenceHelper> preferenceHelperProvider;

  private final Provider<AppDatabase> databaseProvider;

  public CreateActivityViewModel_Factory(
      Provider<Repository> repositoryProvider,
      Provider<PreferenceHelper> preferenceHelperProvider,
      Provider<AppDatabase> databaseProvider) {
    this.repositoryProvider = repositoryProvider;
    this.preferenceHelperProvider = preferenceHelperProvider;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public CreateActivityViewModel get() {
    return new CreateActivityViewModel(
        repositoryProvider.get(), preferenceHelperProvider.get(), databaseProvider.get());
  }

  public static CreateActivityViewModel_Factory create(
      Provider<Repository> repositoryProvider,
      Provider<PreferenceHelper> preferenceHelperProvider,
      Provider<AppDatabase> databaseProvider) {
    return new CreateActivityViewModel_Factory(
        repositoryProvider, preferenceHelperProvider, databaseProvider);
  }

  public static CreateActivityViewModel newInstance(
      Repository repository, PreferenceHelper preferenceHelper, AppDatabase database) {
    return new CreateActivityViewModel(repository, preferenceHelper, database);
  }
}
