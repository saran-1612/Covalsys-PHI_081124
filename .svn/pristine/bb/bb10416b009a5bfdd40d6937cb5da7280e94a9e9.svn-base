// Generated by Dagger (https://google.github.io/dagger).
package com.cbs.snb.di.component;

import com.cbs.snb.di.module.ServiceModule;
import com.cbs.snb.service.LocationService;
import dagger.internal.Preconditions;

public final class DaggerServiceComponent implements ServiceComponent {
  private DaggerServiceComponent(AppComponent appComponent) {}

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public void inject(LocationService service) {}

  public static final class Builder {
    private AppComponent appComponent;

    private Builder() {}

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This
     *     method is a no-op. For more, see https://google.github.io/dagger/unused-modules.
     */
    @Deprecated
    public Builder serviceModule(ServiceModule serviceModule) {
      Preconditions.checkNotNull(serviceModule);
      return this;
    }

    public Builder appComponent(AppComponent appComponent) {
      this.appComponent = Preconditions.checkNotNull(appComponent);
      return this;
    }

    public ServiceComponent build() {
      Preconditions.checkBuilderRequirement(appComponent, AppComponent.class);
      return new DaggerServiceComponent(appComponent);
    }
  }
}
