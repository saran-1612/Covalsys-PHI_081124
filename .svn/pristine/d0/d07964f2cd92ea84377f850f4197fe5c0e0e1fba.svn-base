// Generated by Dagger (https://google.github.io/dagger).
package com.cbs.snb.di.module;

import com.cbs.snb.data.preferences.PreferenceHelper;
import com.cbs.snb.data.preferences.PreferencesManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvidePreferencesHelperFactory implements Factory<PreferenceHelper> {
  private final AppModule module;

  private final Provider<PreferencesManager> preferencesManagerProvider;

  public AppModule_ProvidePreferencesHelperFactory(
      AppModule module, Provider<PreferencesManager> preferencesManagerProvider) {
    this.module = module;
    this.preferencesManagerProvider = preferencesManagerProvider;
  }

  @Override
  public PreferenceHelper get() {
    return providePreferencesHelper(module, preferencesManagerProvider.get());
  }

  public static AppModule_ProvidePreferencesHelperFactory create(
      AppModule module, Provider<PreferencesManager> preferencesManagerProvider) {
    return new AppModule_ProvidePreferencesHelperFactory(module, preferencesManagerProvider);
  }

  public static PreferenceHelper providePreferencesHelper(
      AppModule instance, PreferencesManager preferencesManager) {
    return Preconditions.checkNotNull(
        instance.providePreferencesHelper(preferencesManager),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
