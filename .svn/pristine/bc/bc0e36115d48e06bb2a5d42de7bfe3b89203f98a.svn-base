// Generated by data binding compiler. Do not edit!
package com.cbs.snb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.cbs.snb.R;
import com.cbs.snb.data.network.models.get.ComplaintReportModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ExpenseReportAdapterBinding extends ViewDataBinding {
  @NonNull
  public final TextView amount;

  @NonNull
  public final TextView amountTxt;

  @NonNull
  public final TextView createDate;

  @NonNull
  public final TextView createDateTxt;

  @NonNull
  public final CardView inventoryCard;

  @NonNull
  public final TextView slpCode;

  @NonNull
  public final TextView space1;

  @NonNull
  public final TextView space2;

  @NonNull
  public final TextView space3;

  @NonNull
  public final TextView travelType;

  @NonNull
  public final TextView travelTypeTxt;

  @Bindable
  protected ComplaintReportModel mComplaintReportViewModel;

  protected ExpenseReportAdapterBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView amount, TextView amountTxt, TextView createDate, TextView createDateTxt,
      CardView inventoryCard, TextView slpCode, TextView space1, TextView space2, TextView space3,
      TextView travelType, TextView travelTypeTxt) {
    super(_bindingComponent, _root, _localFieldCount);
    this.amount = amount;
    this.amountTxt = amountTxt;
    this.createDate = createDate;
    this.createDateTxt = createDateTxt;
    this.inventoryCard = inventoryCard;
    this.slpCode = slpCode;
    this.space1 = space1;
    this.space2 = space2;
    this.space3 = space3;
    this.travelType = travelType;
    this.travelTypeTxt = travelTypeTxt;
  }

  public abstract void setComplaintReportViewModel(
      @Nullable ComplaintReportModel complaintReportViewModel);

  @Nullable
  public ComplaintReportModel getComplaintReportViewModel() {
    return mComplaintReportViewModel;
  }

  @NonNull
  public static ExpenseReportAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.expense_report_adapter, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ExpenseReportAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ExpenseReportAdapterBinding>inflateInternal(inflater, R.layout.expense_report_adapter, root, attachToRoot, component);
  }

  @NonNull
  public static ExpenseReportAdapterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.expense_report_adapter, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ExpenseReportAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ExpenseReportAdapterBinding>inflateInternal(inflater, R.layout.expense_report_adapter, null, false, component);
  }

  public static ExpenseReportAdapterBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ExpenseReportAdapterBinding bind(@NonNull View view, @Nullable Object component) {
    return (ExpenseReportAdapterBinding)bind(component, view, R.layout.expense_report_adapter);
  }
}
