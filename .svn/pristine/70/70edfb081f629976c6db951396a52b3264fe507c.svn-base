// Generated by data binding compiler. Do not edit!
package com.cbs.snb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.cbs.snb.R;
import com.cbs.snb.data.network.models.get.InventoryModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class InventoryListAdapterBinding extends ViewDataBinding {
  @NonNull
  public final TextView inStock;

  @NonNull
  public final TextView inStockTxt;

  @NonNull
  public final CardView inventoryCard;

  @NonNull
  public final TextView itemCode;

  @NonNull
  public final TextView itemCodeTxt;

  @NonNull
  public final TextView itemName;

  @NonNull
  public final TextView space1;

  @NonNull
  public final TextView space2;

  @NonNull
  public final TextView space3;

  @NonNull
  public final TextView uom;

  @NonNull
  public final TextView uomTxt;

  @Bindable
  protected InventoryModel mInventoryViewModel;

  protected InventoryListAdapterBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView inStock, TextView inStockTxt, CardView inventoryCard, TextView itemCode,
      TextView itemCodeTxt, TextView itemName, TextView space1, TextView space2, TextView space3,
      TextView uom, TextView uomTxt) {
    super(_bindingComponent, _root, _localFieldCount);
    this.inStock = inStock;
    this.inStockTxt = inStockTxt;
    this.inventoryCard = inventoryCard;
    this.itemCode = itemCode;
    this.itemCodeTxt = itemCodeTxt;
    this.itemName = itemName;
    this.space1 = space1;
    this.space2 = space2;
    this.space3 = space3;
    this.uom = uom;
    this.uomTxt = uomTxt;
  }

  public abstract void setInventoryViewModel(@Nullable InventoryModel inventoryViewModel);

  @Nullable
  public InventoryModel getInventoryViewModel() {
    return mInventoryViewModel;
  }

  @NonNull
  public static InventoryListAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.inventory_list_adapter, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static InventoryListAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<InventoryListAdapterBinding>inflateInternal(inflater, R.layout.inventory_list_adapter, root, attachToRoot, component);
  }

  @NonNull
  public static InventoryListAdapterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.inventory_list_adapter, null, false, component)
   */
  @NonNull
  @Deprecated
  public static InventoryListAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<InventoryListAdapterBinding>inflateInternal(inflater, R.layout.inventory_list_adapter, null, false, component);
  }

  public static InventoryListAdapterBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static InventoryListAdapterBinding bind(@NonNull View view, @Nullable Object component) {
    return (InventoryListAdapterBinding)bind(component, view, R.layout.inventory_list_adapter);
  }
}
