package com.cbs.snb.ui.customerhistory.viewcustomer;

import android.content.Intent;
import android.os.Bundle;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.DefaultItemAnimator;
import androidx.recyclerview.widget.LinearLayoutManager;

import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;

import com.cbs.snb.BR;
import com.cbs.snb.R;
import com.cbs.snb.data.network.models.get.CustomerDetailsModel;
import com.cbs.snb.databinding.FragmentCustomerHistoryBinding;
import com.cbs.snb.ui.base.BaseFragment;
import com.cbs.snb.ui.customerhistory.addcustomer.AddCustomerActivity;

import java.util.List;

import javax.inject.Inject;

/**
 * A simple {@link Fragment} subclass.
 * Use the {@link CustomerHistoryFragment#newInstance} factory method to
 * create an instance of this fragment.
 */
public class CustomerHistoryFragment extends BaseFragment<CustomerHistoryViewModel, FragmentCustomerHistoryBinding>
        implements CustomerHistoryNavigator {


    @Inject
    CustomerHistoryAdapter mAdapter;

    public static CustomerHistoryFragment newInstance() {
        CustomerHistoryFragment fragment = new CustomerHistoryFragment();
        Bundle args = new Bundle();
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public int getBindingVariable() {
        return BR.customerHistoryViewModel;
    }

    @Override
    public int getLayoutRes() {
        return R.layout.fragment_customer_history;
    }

    @Override
    protected Class<CustomerHistoryViewModel> getViewModel() {
        return CustomerHistoryViewModel.class;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

    }

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, Bundle savedInstanceState) {
        super.onCreateView(inflater, container, savedInstanceState);
        setHasOptionsMenu(true);
        viewModel.setNavigator(this);
        setUp();
        return dataBinding.getRoot();
    }

    public void setUp(){

        dataBinding.outstandingRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
        dataBinding.outstandingRecyclerView.setItemAnimator(new DefaultItemAnimator());
        dataBinding.outstandingRecyclerView.setAdapter(mAdapter);

        viewModel.isLoading().observe(getViewLifecycleOwner(),aBoolean -> {
            if (aBoolean){
                showLoading();
            }else {
                hideLoading();
            }
        });

        viewModel.getOutStanding("C").observe(getViewLifecycleOwner(),customerDetailsModelResource -> {
            switch (customerDetailsModelResource.status){
                case LOADING:
                    showLoading();
                    break;
                case SUCCESS:
                    hideLoading();
                    setData(customerDetailsModelResource.data.getResponseObject());
                    break;
                case ERROR:
                    hideLoading();
                    showSnackBar(customerDetailsModelResource.getMessage(),getResources().getColor(R.color.red));
                    break;
                default:
                    break;

            }
        });

        dataBinding.searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
            @Override
            public boolean onQueryTextSubmit(String query) {
                return false;
            }

            @Override
            public boolean onQueryTextChange(String newText) {
                mAdapter.getFilter().filter(newText);
                return true;
            }
        });

    }


    private void setData(List<CustomerDetailsModel.ResponseObject> modelList){
        mAdapter.clearList();
        mAdapter.addData(modelList);
        mAdapter.notifyDataSetChanged();

    }

    @Override
    public void onCreateOptionsMenu(@NonNull Menu menu, @NonNull MenuInflater inflater) {
        inflater.inflate(R.menu.menu_add_customer, menu);
        super.onCreateOptionsMenu(menu,inflater);

    }

    @Override
    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
        int id = item.getItemId();
        if (id == R.id.action_add) {
            Intent intent = AddCustomerActivity.newIntent(getActivity());
            startActivity(intent);
            return true;
        }

        return super.onOptionsItemSelected(item); // important line

    }

    @Override
    public void onPrepareOptionsMenu(@NonNull Menu menu) {
        MenuItem item = menu.findItem(R.id.action_cart);

        if (item != null)
            item.setVisible(false);

    }
}