package com.cbs.snb.ui.login;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;

import androidx.lifecycle.ViewModelProvider;

import com.cbs.snb.BR;
import com.cbs.snb.R;
import com.cbs.snb.data.network.models.get.LoginModel;
import com.cbs.snb.databinding.ActivityLoginBinding;
import com.cbs.snb.ui.ViewModelProviderFactory;
import com.cbs.snb.ui.attendance.checkin.CheckInActivity;
import com.cbs.snb.ui.base.BaseActivity;
import com.cbs.snb.ui.forgotpassword.ForgotPasswordActivity;
import java.util.List;
import javax.inject.Inject;

/**
 * Created by Venkatesh on 11-07-2020.
 */
public class LoginActivity extends BaseActivity<LoginViewModel, ActivityLoginBinding>
        implements LoginNavigator {

    @Inject
    ViewModelProviderFactory factory;

//    @Inject
//    PreferenceHelper preferenceHelper;

    private LoginViewModel mLoginViewModel;

    @Override
    public int getBindingVariable() {
        return BR.loginViewModel;
    }

    @Override
    protected int getLayoutRes() {
        return R.layout.activity_login;
    }

    public static Intent newIntent(Context context) {
        return new Intent(context, LoginActivity.class);

    }

    @Override
    public LoginViewModel getViewModel() {
        mLoginViewModel = new ViewModelProvider(this, factory).get(LoginViewModel.class);
        return mLoginViewModel;
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        mLoginViewModel.setNavigator(this);
       // dataBinding.etEmail.setText("CEE");
       // dataBinding.etPassword.setText("1234");
        dataBinding.btnServerLogin.setOnClickListener(v ->{
            if (isNetworkConnected()){
                login();
            }else{
                showSnackBar(getString(R.string.no_internet), getResources().getColor(R.color.red));
            }

        });

    }


    public void login() {
        mLoginViewModel.isLoading().observe(this, aBoolean -> {
            if (aBoolean) {
                showLoading();
            } else {
                hideLoading();
            }
        });

        String email = dataBinding.etEmail.getText().toString();
        String password = dataBinding.etPassword.getText().toString();
        mLoginViewModel.EmailAddress.postValue(email);
        mLoginViewModel.Password.postValue(password);

        if (mLoginViewModel.isEmailAndPasswordValid(email, password)) {
            hideKeyboard();
            mLoginViewModel.getLogin(email, password).observe(this, loginModelResource -> {
                switch (loginModelResource.status) {
                    case LOADING:
                        showLoading();
                        break;
                    case SUCCESS:
                        hideLoading();
                        Log.e("SUCCESS",loginModelResource.data.getStatusMessage());
                        //Toast.makeText(this, "done", Toast.LENGTH_SHORT).show();
                        setLoginResponse(loginModelResource.data.getResponseObject());
                        break;
                    case ERROR:
                        hideLoading();
                        Log.e("ERROR",loginModelResource.getMessage());
                        showSnackBar(getString(R.string.invalid_email_password), getResources().getColor(R.color.red));
                        break;
                    default:
                        break;
                }
            });
        } else {
            if (email.isEmpty()){
                showSnackBar(getString(R.string.empty_email), getResources().getColor(R.color.black_effective));
            }else{
                showSnackBar(getString(R.string.empty_password), getResources().getColor(R.color.black_effective));
            }

        }
    }



    public void setLoginResponse(List<LoginModel.ResponseObject> loginResponse) {
        mLoginViewModel.saveDetails(loginResponse,LoginActivity.this);
        Intent intent = CheckInActivity.newIntent(LoginActivity.this);
        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity(intent);
    }

    @Override
    public void showLoading() {
        super.showLoading();
    }

    @Override
    public void hideLoading() {
        super.hideLoading();
    }

    @Override
    public void openForgotPassword() {
        startActivity(ForgotPasswordActivity.newIntent(LoginActivity.this));
    }
}
