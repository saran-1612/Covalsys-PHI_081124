package com.cbs.snb.ui.pdf_viwer.report_list;

import android.content.Context;
import android.content.Intent;
import android.view.LayoutInflater;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.cbs.snb.data.network.models.get.ReportListModel;
import com.cbs.snb.databinding.EmptyAdapterBinding;
import com.cbs.snb.databinding.OrderListAdapterLayoutBinding;
import com.cbs.snb.ui.base.BaseViewHolder;
import com.cbs.snb.ui.pdf_viwer.PDFViewerActivity;

import java.util.List;

/**
 * Created by Venkatesh on 31-08-2020.
 */
public class ReportListAdapter extends RecyclerView.Adapter<BaseViewHolder> {

    public static final int VIEW_TYPE_EMPTY = 0;
    public static final int VIEW_TYPE_NORMAL = 1;
    private List<ReportListModel.ResponseObject> mReportList;
    private Context mContext;

    public ReportListAdapter(List<ReportListModel.ResponseObject> mReportList, Context mContext) {
        this.mReportList = mReportList;
        this.mContext = mContext;
    }

    @NonNull
    @Override
    public BaseViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        switch (viewType) {
            case VIEW_TYPE_NORMAL:
                OrderListAdapterLayoutBinding binding = OrderListAdapterLayoutBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false);
                return new ReportListViewHolder(binding);
            case VIEW_TYPE_EMPTY:
            default:
                EmptyAdapterBinding emptyViewBinding = EmptyAdapterBinding.inflate(LayoutInflater.from(parent.getContext()),
                        parent, false);
                return new EmptyViewHolder(emptyViewBinding);
        }
    }

    @Override
    public void onBindViewHolder(@NonNull BaseViewHolder holder, int position) {
        holder.onBind(position);
    }

    @Override
    public int getItemCount() {
        if (mReportList != null && mReportList.size() > 0) {
            return mReportList.size();
        } else {
            return 1;
        }
    }

    @Override
    public int getItemViewType(int position) {
        if (mReportList != null && !mReportList.isEmpty()) {
            return VIEW_TYPE_NORMAL;
        } else {
            return VIEW_TYPE_EMPTY;
        }
    }

    public void clearList() {
        mReportList.clear();
    }

    public class ReportListViewHolder extends BaseViewHolder {

        OrderListAdapterLayoutBinding binding;

        public ReportListViewHolder(@NonNull OrderListAdapterLayoutBinding itemView) {
            super(itemView.getRoot());
            this.binding = itemView;
        }

        @Override
        public void onBind(int position) {
            ReportListModel.ResponseObject model = mReportList.get(position);
            binding.reportName.setText(model.getName());

            binding.ordersCard.setOnClickListener(v ->
                    mContext.startActivity(new Intent(mContext, PDFViewerActivity.class)
                            .putExtra("ReportName", model.getFileName())
                            .putExtra("SPName", model.getSPName())
                            .putExtra("Parameter", model.getParameter())
                            .putExtra("SlpCode", model.getSlpCode())
                            .putExtra("FromToDate", model.getFromToDate())
                            .putExtra("CustomerCode", model.getCustomerCode())
                            .putExtra("CustomerMen", model.getCusMandatory())
                            .putExtra("ToDate", model.getToDate())
                            .putExtra("Region", model.getRegion())));
        }
    }


    public static class EmptyViewHolder extends BaseViewHolder {

        private EmptyAdapterBinding mBinding;

        public EmptyViewHolder(EmptyAdapterBinding binding) {
            super(binding.getRoot());
            this.mBinding = binding;
        }

        @Override
        public void onBind(int position) {

        }
    }
}
