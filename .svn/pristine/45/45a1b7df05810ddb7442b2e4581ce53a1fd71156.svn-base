// Generated by Dagger (https://google.github.io/dagger).
package com.cbs.snb.ui.settings;

import androidx.fragment.app.Fragment;
import com.cbs.snb.ui.ViewModelProviderFactory;
import com.cbs.snb.ui.base.BaseActivity_MembersInjector;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import javax.inject.Provider;

public final class SettingsActivity_MembersInjector implements MembersInjector<SettingsActivity> {
  private final Provider<DispatchingAndroidInjector<Fragment>> fragmentAndroidInjectorProvider;

  private final Provider<ViewModelProviderFactory> factoryProvider;

  public SettingsActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> fragmentAndroidInjectorProvider,
      Provider<ViewModelProviderFactory> factoryProvider) {
    this.fragmentAndroidInjectorProvider = fragmentAndroidInjectorProvider;
    this.factoryProvider = factoryProvider;
  }

  public static MembersInjector<SettingsActivity> create(
      Provider<DispatchingAndroidInjector<Fragment>> fragmentAndroidInjectorProvider,
      Provider<ViewModelProviderFactory> factoryProvider) {
    return new SettingsActivity_MembersInjector(fragmentAndroidInjectorProvider, factoryProvider);
  }

  @Override
  public void injectMembers(SettingsActivity instance) {
    BaseActivity_MembersInjector.injectFragmentAndroidInjector(
        instance, fragmentAndroidInjectorProvider.get());
    injectFactory(instance, factoryProvider.get());
  }

  public static void injectFactory(SettingsActivity instance, ViewModelProviderFactory factory) {
    instance.factory = factory;
  }
}
