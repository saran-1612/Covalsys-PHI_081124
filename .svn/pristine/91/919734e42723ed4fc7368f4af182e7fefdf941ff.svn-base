// Generated by Dagger (https://google.github.io/dagger).
package com.cbs.snb.ui.base;

import androidx.databinding.ViewDataBinding;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.ViewModel;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import javax.inject.Provider;

public final class BaseActivity_MembersInjector<V extends ViewModel, D extends ViewDataBinding>
    implements MembersInjector<BaseActivity<V, D>> {
  private final Provider<DispatchingAndroidInjector<Fragment>> fragmentAndroidInjectorProvider;

  public BaseActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> fragmentAndroidInjectorProvider) {
    this.fragmentAndroidInjectorProvider = fragmentAndroidInjectorProvider;
  }

  public static <V extends ViewModel, D extends ViewDataBinding>
      MembersInjector<BaseActivity<V, D>> create(
          Provider<DispatchingAndroidInjector<Fragment>> fragmentAndroidInjectorProvider) {
    return new BaseActivity_MembersInjector<V, D>(fragmentAndroidInjectorProvider);
  }

  @Override
  public void injectMembers(BaseActivity<V, D> instance) {
    injectFragmentAndroidInjector(instance, fragmentAndroidInjectorProvider.get());
  }

  public static <V extends ViewModel, D extends ViewDataBinding> void injectFragmentAndroidInjector(
      BaseActivity<V, D> instance, DispatchingAndroidInjector<Fragment> fragmentAndroidInjector) {
    instance.fragmentAndroidInjector = fragmentAndroidInjector;
  }
}
