// Generated by data binding compiler. Do not edit!
package com.cbs.snb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.cbs.snb.R;
import com.cbs.snb.ui.settings.SettingsViewModel;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class SettingsActivityBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout layoutBlue;

  @NonNull
  public final LinearLayout layoutGreen;

  @NonNull
  public final LinearLayout layoutIndigo;

  @NonNull
  public final LinearLayout layoutOrange;

  @NonNull
  public final LinearLayout layoutPink;

  @NonNull
  public final LinearLayout layoutPurple;

  @NonNull
  public final LinearLayout layoutRed;

  @NonNull
  public final LinearLayout layoutYellow;

  @NonNull
  public final ImageView themeBlue;

  @NonNull
  public final ImageView themeGreen;

  @NonNull
  public final ImageView themeIndigo;

  @NonNull
  public final ImageView themeOrange;

  @NonNull
  public final ImageView themePink;

  @NonNull
  public final ImageView themePurple;

  @NonNull
  public final ImageView themeRed;

  @NonNull
  public final ImageView themeYellow;

  @NonNull
  public final AppBarLayout tintAppBarLayout;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvBlueTheme;

  @NonNull
  public final TextView tvGreenTheme;

  @NonNull
  public final TextView tvIndigoTheme;

  @NonNull
  public final TextView tvOrangeTheme;

  @NonNull
  public final TextView tvPinkTheme;

  @NonNull
  public final TextView tvPurpleTheme;

  @NonNull
  public final TextView tvRedTheme;

  @NonNull
  public final TextView tvYellowTheme;

  @Bindable
  protected SettingsViewModel mSettingsViewModel;

  protected SettingsActivityBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout layoutBlue, LinearLayout layoutGreen, LinearLayout layoutIndigo,
      LinearLayout layoutOrange, LinearLayout layoutPink, LinearLayout layoutPurple,
      LinearLayout layoutRed, LinearLayout layoutYellow, ImageView themeBlue, ImageView themeGreen,
      ImageView themeIndigo, ImageView themeOrange, ImageView themePink, ImageView themePurple,
      ImageView themeRed, ImageView themeYellow, AppBarLayout tintAppBarLayout, Toolbar toolbar,
      TextView tvBlueTheme, TextView tvGreenTheme, TextView tvIndigoTheme, TextView tvOrangeTheme,
      TextView tvPinkTheme, TextView tvPurpleTheme, TextView tvRedTheme, TextView tvYellowTheme) {
    super(_bindingComponent, _root, _localFieldCount);
    this.layoutBlue = layoutBlue;
    this.layoutGreen = layoutGreen;
    this.layoutIndigo = layoutIndigo;
    this.layoutOrange = layoutOrange;
    this.layoutPink = layoutPink;
    this.layoutPurple = layoutPurple;
    this.layoutRed = layoutRed;
    this.layoutYellow = layoutYellow;
    this.themeBlue = themeBlue;
    this.themeGreen = themeGreen;
    this.themeIndigo = themeIndigo;
    this.themeOrange = themeOrange;
    this.themePink = themePink;
    this.themePurple = themePurple;
    this.themeRed = themeRed;
    this.themeYellow = themeYellow;
    this.tintAppBarLayout = tintAppBarLayout;
    this.toolbar = toolbar;
    this.tvBlueTheme = tvBlueTheme;
    this.tvGreenTheme = tvGreenTheme;
    this.tvIndigoTheme = tvIndigoTheme;
    this.tvOrangeTheme = tvOrangeTheme;
    this.tvPinkTheme = tvPinkTheme;
    this.tvPurpleTheme = tvPurpleTheme;
    this.tvRedTheme = tvRedTheme;
    this.tvYellowTheme = tvYellowTheme;
  }

  public abstract void setSettingsViewModel(@Nullable SettingsViewModel settingsViewModel);

  @Nullable
  public SettingsViewModel getSettingsViewModel() {
    return mSettingsViewModel;
  }

  @NonNull
  public static SettingsActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.settings_activity, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SettingsActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SettingsActivityBinding>inflateInternal(inflater, R.layout.settings_activity, root, attachToRoot, component);
  }

  @NonNull
  public static SettingsActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.settings_activity, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SettingsActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SettingsActivityBinding>inflateInternal(inflater, R.layout.settings_activity, null, false, component);
  }

  public static SettingsActivityBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SettingsActivityBinding bind(@NonNull View view, @Nullable Object component) {
    return (SettingsActivityBinding)bind(component, view, R.layout.settings_activity);
  }
}
