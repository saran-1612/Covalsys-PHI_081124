package com.cbs.snb.ui.customers;

import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;

import com.cbs.snb.data.database.AppDatabase;
import com.cbs.snb.data.network.ApiService;
import com.cbs.snb.data.network.Resource;
import com.cbs.snb.data.network.models.get.CustomerDetailsModel;
import com.cbs.snb.data.network.repository.Repository;
import com.cbs.snb.data.preferences.PreferenceHelper;
import com.cbs.snb.ui.base.BaseViewModel;
import com.cbs.snb.ui.customerhistory.viewcustomer.CustomerHistoryViewModel;
import com.cbs.snb.utils.rx.SchedulerProvider;

import javax.inject.Inject;

/**
 * Created by Venkatesh on 09-07-2020.
 */
public class CustomerViewModel extends BaseViewModel<CustomerNavigator> {

    public static final String TAG = CustomerViewModel.class.getSimpleName();
    public MutableLiveData<Boolean> progressBar;
    public MutableLiveData<Resource<CustomerDetailsModel>> primaryCustomers;
    public MutableLiveData<Resource<CustomerDetailsModel>> secondaryCustomers;

    @Inject
    public CustomerViewModel(Repository repository, SchedulerProvider schedulerProvider,
                             PreferenceHelper preferenceHelper, AppDatabase database, ApiService service) {
        super(repository, schedulerProvider, preferenceHelper, database, service);
        primaryCustomers = new MutableLiveData<>();
        secondaryCustomers = new MutableLiveData<>();
        progressBar = new MutableLiveData<>();
        init();
    }

    public void init(){
        getPCustomersDetails();
        getSCustomersDetails();

    }

    public LiveData<Resource<CustomerDetailsModel>> getPCustomers() {
        return primaryCustomers;
    }

    public LiveData<Resource<CustomerDetailsModel>> getSCustomers() {
        return secondaryCustomers;
    }

    private void getPCustomersDetails() {
        progressBar.setValue(true);
        getCompositeDisposable().add(getApiService()
                .getPrimaryCustomers("C", getPreferenceHelper().getSalesEmpCode(),getPreferenceHelper().getEmpTypeCode())
                .subscribeOn(getSchedulerProvider().io())
                .observeOn(getSchedulerProvider().ui())
                .subscribe(customerDetailsModel1 -> {
                    progressBar.setValue(false);
                    if (customerDetailsModel1.getStatusCode() == 0){
                        primaryCustomers.postValue(Resource.success(customerDetailsModel1));
                    }else {
                        primaryCustomers.postValue(Resource.error(customerDetailsModel1.getStatusMessage(),null));
                    }
                }, throwable -> {
                    progressBar.setValue(false);
                    primaryCustomers.postValue(Resource.error(throwable.toString(),null));
                }));
    }


    private void getSCustomersDetails() {
        progressBar.setValue(true);
        getCompositeDisposable().add(getApiService()
                .getSecondaryCustomers("C", getPreferenceHelper().getSalesEmpCode(),getPreferenceHelper().getEmpTypeCode())
                .subscribeOn(getSchedulerProvider().io())
                .observeOn(getSchedulerProvider().ui())
                .subscribe(customerDetailsModel1 -> {
                    progressBar.setValue(false);
                    if (customerDetailsModel1.getStatusCode() == 0){
                        secondaryCustomers.postValue(Resource.success(customerDetailsModel1));
                    }else {
                        secondaryCustomers.postValue(Resource.error(customerDetailsModel1.getStatusMessage(),null));
                    }
                }, throwable -> {
                    progressBar.setValue(false);
                    secondaryCustomers.postValue(Resource.error(throwable.toString(),null));
                }));
    }

}
